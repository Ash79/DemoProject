swagger: '2.0'
info:
  version: v1
  title: user
  description: This is sample API being generated by cedrus-api generator
  x-ibm-name: democustomer0605
host: $(catalog.host)
basePath: /api
schemes:
  - https
produces:
  - application/json
paths:
  /users/v1:
    get:
      tags:
        - User
      description: Gets all users from the system that the user has access to
      operationId: getUser
      produces:
        - application/json
      x-swagger-router-controller: User
      responses:
        '200':
          description: user response
          schema:
            type: array
            items:
              $ref: '#/definitions/usersv1'
        '404':
          description: user response
          schema:
            type: object
        '500':
          description: user response
          schema:
            type: object
      parameters:
        - name: pageSize
          in: query
          description: Number of records returned
          type: integer
        - name: pageNumber
          in: query
          description: Page number
          type: integer
        - name: revision
          in: header
          description: Needed Revision
          required: true
          type: string
          default: R1
        - name: username
          in: query
          description: ''
          required: false
          type: string
    post:
      tags:
        - User
      description: Posts all users from the system that the user has access to
      operationId: postUser
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: User
      responses:
        '200':
          description: user response
          schema:
            type: array
            items:
              $ref: '#/definitions/usersv1'
        '404':
          description: user response
          schema:
            type: object
        '500':
          description: user response
          schema:
            type: object
      parameters:
        - name: users/v1
          in: body
          schema:
            $ref: '#/definitions/usersv1'
        - name: revision
          in: header
          description: Needed Revision
          required: true
          type: string
          default: R1
  '/users/v1/{userid}':
    get:
      tags:
        - User
      description: Gets all users from the system that the user has access to
      operationId: getUserById
      produces:
        - application/json
      x-swagger-router-controller: User
      responses:
        '200':
          description: user response
          schema:
            type: object
            $ref: '#/definitions/usersv1'
        '404':
          description: user response
          schema:
            type: object
        '500':
          description: user response
          schema:
            type: object
      parameters:
        - name: userid
          in: path
          description: Path Parameter
          type: string
          required: true
        - name: revision
          in: header
          description: Needed Revision
          required: true
          type: string
          default: R1
        - name: username
          in: query
          description: ''
          required: false
          type: string
    put:
      tags:
        - User
      description: Puts all users from the system that the user has access to
      operationId: putUser
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: User
      responses:
        '200':
          description: user response
          schema:
            type: array
            items:
              $ref: '#/definitions/usersv1'
        '404':
          description: user response
          schema:
            type: object
        '500':
          description: user response
          schema:
            type: object
      parameters:
        - name: users/v1
          in: body
          schema:
            $ref: '#/definitions/usersv1'
        - name: userid
          in: path
          description: Path Parameter
          type: string
          required: true
        - name: revision
          in: header
          description: Needed Revision
          required: true
          type: string
          default: R1
    patch:
      tags:
        - User
      description: Patchs all users from the system that the user has access to
      operationId: patchUser
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: User
      responses:
        '200':
          description: user response
          schema:
            type: array
            items:
              $ref: '#/definitions/usersv1'
        '404':
          description: user response
          schema:
            type: object
        '500':
          description: user response
          schema:
            type: object
      parameters:
        - name: users/v1
          in: body
          schema:
            $ref: '#/definitions/patchusersv1'
        - name: userid
          in: path
          description: Path Parameter
          type: string
          required: true
        - name: revision
          in: header
          description: Needed Revision
          required: true
          type: string
          default: R1
    delete:
      tags:
        - User
      description: Deletes all users from the system that the user has access to
      operationId: deleteUser
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: User
      responses:
        '204':
          description: user response
          schema:
            type: array
            items:
              $ref: '#/definitions/usersv1'
        '404':
          description: user response
          schema:
            type: object
        '500':
          description: user response
          schema:
            type: object
      parameters:
        - name: userid
          in: path
          description: Path Parameter
          type: string
          required: true
        - name: revision
          in: header
          description: Needed Revision
          required: true
          type: string
          default: R1
definitions:
  ApiError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  usersv1:
    type: object
    properties:
      userid:
        type: integer
        format: int32
      userName:
        type: string
        format: ''
      firstName:
        type: string
        format: ''
      lastName:
        type: string
        format: ''
    required:
      - userid
      - userName
      - firstName
      - lastName
  patchusersv1:
    type: object
    properties:
      userName:
        type: string
        format: ''
      firstName:
        type: string
        format: ''
      lastName:
        type: string
        format: ''
responses:
  Standard500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/ApiError'
  PersonDoesNotExistResponse:
    description: Person does not exist.
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  gateway: datapower-gateway
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:8080'
  assembly:
    execute:
      - invoke:
          target-url: >-
            https://democustomer0605.mybluemix.net$(request.path)$(request.search)
          tls-profile: ''
          secure-gateway: false
    catch: []
